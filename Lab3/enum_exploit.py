import pefile
improt sys

malware_file = sys.argv[1]
pe = pefile.PE(malware_file)
hex_addresses = []
duplicate_list = []
offset_list = []

def duplicates(list, value):
    global duplicate_list
    for i in range(len(list)):
        if value == list[i]:
            duplicate_list.append(list[i])

def subtract_mem_add(address1, address2):
    return hex(abs(int(address1,16) - int(address2,16)))

if hasattr(pe, 'DIRECTORY_ENTRY_EXPORT'):
    for exp in pe.DIRECTORY_ENTRY_EXPORT.symbols:
        print("%s \t %s \t %s" % (hex(exp.address + pe.OPTIONAL_HEADER.ImageBase), exp.name, exp.ordinal))
        hex_addresses.append(hex(exp.address + pe.OPTIONAL_HEADER.ImageBase))

    for i in range(len(hex_addresses)):
        duplicate_list=[]
        duplicates(hex_addresses, hex_addresses[i])
        if len(duplicate_list) > 2:
            print("\nERROR: Malware Detected (1)\nThree or more export functions contain the same memory address.\n")
            break

    for e in range(len(hex_addresses)-1):
        offset_list.append(subtract_mem_add(hex_addresses[e],hex_addresses[e+1]))
    for f in range(len(offset_list)):
        duplicate_list=[]
        duplicates(offset_list, offset_list[f])
        if len(duplicate_list) > 2:
            print("\nERROR: Malware Deteced (2) \nThree of the differences between the four functions have the same meory offset.\n") 
            break